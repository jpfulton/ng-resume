name: Reusable API CD Workflow

on:
  workflow_call:
    inputs:
      dotnet-version:
        required: true
        type: string
      function-app-package-path:
        required: true
        type: string
      function-app-name:
        required: true
        type: string
      slot-name:
        required: true
        type: string
      resource-group:
        required: true
        type: string
    secrets:
      azure-sp-credentials:
        required: true

jobs:
  api_cd_job:
    name: API CD Job

    permissions:
      contents: read
      pull-requests: write

    runs-on: windows-latest

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v3

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.azure-sp-credentials }}

      - name: Setup DotNet ${{ inputs.dotnet-version }} Environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: pwsh
        run: |
          pushd './${{ inputs.function-app-package-path }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: 'Run Azure Functions Action for ${{ inputs.slot-name }} Slot'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ inputs.function-app-name }}
          package: '${{ inputs.function-app-package-path }}/output'
          slot-name: ${{ inputs.slot-name }}

      - name: 'Swap ${{ inputs.slot-name }} to Production'
        run: az functionapp deployment slot swap
              -g ${{ inputs.resource-group }}
              -n ${{ inputs.function-app-name }}
              --slot ${{ inputs.slot-name }}
              --target-slot production

      - name: Comment PR
        if: (github.event_name == 'pull_request' && github.event.action != 'closed')
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
              PR #${{ github.event.pull_request.number }} API deployed to ${{ inputs.function-app-name }} on
              _(execution **${{ github.run_id }}** / attempt **${{ github.run_attempt }}**)_
          comment_tag: preview_api_deployment