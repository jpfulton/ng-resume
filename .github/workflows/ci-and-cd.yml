# CI/CD workflow triggered by pushes and PRs into the default branch.
#
# References:
#   https://github.com/actions/starter-workflows/blob/main/deployments/azure-staticwebapp.yml
#   https://github.com/Azure/static-web-apps-deploy
#   https://github.com/actions/setup-node#caching-global-packages-data
name: continous-integration-and-deployment

# Define environment variables available to all jobs and steps.
#
# To allow for finer grained control of the Angular build process, these variables (which
# are used in the Azure/static-web-apps-deploy module) are configured as though the client
# application to deploy is a simple HTML application. Following the initial steps in the
# lint_test_build_deploy_job, the build output from the 'ng build' command are placed
# in the /ng-resume/dist/ng-resume folder as completed build output artifacts and may be pushed to Azure
# as though they are a "static HTML site" in the eyes of the deploy step.
#
# Reference for framework deploy configurations: https://docs.microsoft.com/azure/static-web-apps/front-end-frameworks
env:
  APP_LOCATION: "/ng-resume/dist/ng-resume" # location of the client application build artifacts
  API_LOCATION: "" # no backend api exists in the current project state
  OUTPUT_LOCATION: "" # an empty value here causes the APP_LOCATION location to be pushed to Azure
  AZURE_STATIC_WEB_APPS_API_TOKEN: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }} # repository secret containing deployment token

# Execute this workflow on pushes to the default branch or upon pull requests into the default branch.
on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ main ]

# Default permissions for each job. May be supplemented or overridden in each configured job.
permissions:
  contents: read

jobs:
  lint_test_build_deploy_job:
    name: "Lint -> Test -> Build -> Deploy Job"

    # Execute this job upon pushes to the default branch or
    # PRs into the default branch that are not closed.
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')

    permissions:
      contents: read # for actions/checkout to fetch code
      pull-requests: write # for Azure/static-web-apps-deploy to comment on PRs

    runs-on: ubuntu-latest

    steps:
        - name: Checkout repository
          id: checkout
          uses: actions/checkout@v3

        - name: Use Node.js
          id: nodejs
          uses: actions/setup-node@v3
          with:
            node-version: '18.x'
            cache: 'yarn'
            cache-dependency-path: ng-resume/yarn.lock

        - name: Install dependencies via yarn with frozen lockfile
          id: installdeps
          working-directory: ng-resume
          run: yarn --frozen-lockfile

        - name: Lint application
          id: lint
          working-directory: ng-resume
          run: yarn run lint

        - name: Test application
          id: test
          working-directory: ng-resume
          run: yarn run test --configuration=ci

        - name: Build application
          id: build
          working-directory: ng-resume
          run: yarn run build

        # Deploy build artifacts into Azure.
        # In the event of a push into the default branch, deploy to production.
        # In the event of a pending PR into the default branch, create and deploy to a preview
        # environment with a comment on the PR including the preview URL.
        - name: Deploy application to Azure
          id: deploy
          uses: Azure/static-web-apps-deploy@v1
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
            azure_static_web_apps_api_token: ${{ env.AZURE_STATIC_WEB_APPS_API_TOKEN }}
            action: "upload" # upload artifacts and deploy to either production or a preview environment
            app_location: ${{ env.APP_LOCATION }}
            api_location: ${{ env.API_LOCATION }}
            output_location: ${{ env.OUTPUT_LOCATION }}

        - name: E2E test suite on deployment
          id: e2e
          uses: cypress-io/github-action@v5
          with:
            working-directory: ng-resume
            config: baseUrl=${{ steps.deploy.outputs.static_web_app_url }}

        - name: Upload E2E test suite failure screenshots artifact
          id: e2e-failure-screenshot-upload
          uses: actions/upload-artifact@v3
          if: failure()
          with:
            name: failure-screenshots
            path: ng-resume/cypress/screenshots

        - name: Upload E2E test suite video artifact
          id: e2e-video-upload
          uses: actions/upload-artifact@v3
          if: always()
          with:
            name: e2e-videos
            path: ng-resume/cypress/videos

  close_pull_request_job:
    name: On Closed Pull Request Clean Up Azure Preview Environments Job

    permissions:
      contents: none # no repo access required in this job

    # Execute this job upon closure of a pull request to clean up any Azure preview
    # environments that existed from the opening or modification of a PR.
    if: github.event_name == 'pull_request' && github.event.action == 'closed'

    runs-on: ubuntu-latest

    steps:
      - name: On Close Pull Request Clean Up Preview Environments
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close" # remove preview environment upon PR closure
          app_location: ${{ env.APP_LOCATION }}
          api_location: ${{ env.API_LOCATION }}
          output_location: ${{ env.OUTPUT_LOCATION }}
